mode = "everything",
positive="1")
ROCPred <- prediction(as.numeric(preds_qda), test_set$Classes)
preds_qda = predict(qda_model,train_set, type="response")
confusionMatrix(preds$class, train_set$Classes,
mode = "everything",
positive="1")
preds_qda = predict(qda_model,test_set, type="response")
confusionMatrix(preds$class, test_set$Classes,
mode = "everything",
positive="1")
confusionMatrix(preds_qda$class, test_set$Classes,
mode = "everything",
positive="1")
ROCPred <- prediction(as.numeric(preds_qda), test_set$Classes)
ROCPred <- prediction(preds_qda, test_set$Classes)
preds_qda = predict(qda_model,test_set, type="response")
confusionMatrix(preds_qda$class, test_set$Classes,
mode = "everything",
positive="1")
ROCPred <- prediction(preds_qda, test_set$Classes)
ROCPred <- prediction(preds_qda, test_set$Classes)
preds_qda = predict(qda_model,test_set$Classes, type="response")
preds_qda = predict(qda_model,test_set, type="response")
confusionMatrix(preds_qda$class, test_set$Classes,
mode = "everything",
positive="1")
ROCPred <- prediction(preds_qda$class, test_set$Classes)
ROCPred <- prediction(as.numeric(preds_qda$class), test_set$Classes)
ROCPred <- prediction(as.numeric(preds_qda$class), test_set$Classes)
ROCPer <- performance(ROCPred, measure="tpr",x.measure="fpr")
auc <- performance(ROCPred, measure = "auc")
auc <- auc@y.values[[1]]
auc
plot(ROCPer, colorize = TRUE)
auc
ROCPred <- prediction(as.numeric(preds_lda$class), test_set$Classes)
ROCPred <- prediction(preds_lda$class), test_set$Classes)
ROCPred <- prediction(preds_lda$class, test_set$Classes)
ROCPred <- prediction(preds_lda, test_set$Classes)
preds_lda = predict(lda_model,test_set, type="response")
confusionMatrix(preds_lda$class, test_set$Classes,
mode = "everything",
positive="1")
ROCPred <- prediction(preds_lda$class), test_set$Classes)
ROCPred <- prediction(preds_lda$class, test_set$Classes)
ROCPred <- prediction(as.numeric(preds_lda$class), test_set$Classes)
ROCPer <- performance(ROCPred, measure="tpr",x.measure="fpr")
auc <- performance(ROCPred, measure = "auc")
auc <- auc@y.values[[1]]
auc
plot(ROCPer, colorize = TRUE)
auc
preds_lda = predict(lda_model,train_set, type="response")
confusionMatrix(preds_lda$class, train_set$Classes,
mode = "everything",
positive="1")
preds_lda = predict(lda_model,test_set, type="response")
confusionMatrix(preds_lda$class, test_set$Classes,
mode = "everything",
positive="1")
preds_lda = predict(lda_model,train_set, type="response")
confusionMatrix(preds_lda$class, train_set$Classes,
mode = "everything",
positive="1")
preds_lda = predict(lda_model,test_set, type="response")
confusionMatrix(preds_lda$class, test_set$Classes,
mode = "everything",
positive="1")
tune.out <- tune(svm, Classes ~ Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data = df_scaled, kernel ='linear', range = list(cost = c(0.001, 0.01, 0.1, 1, 10, 100)))
library(kernlab)
install.packages(kernlab)
install.packages("kernlab")
library(kernlab)
library(e1071)
library(MASS)
library(dplyr)
library(vtable)
library(vtable)
library(plyr)
library(ggplot2)
library(ggcorrplot)
library(plotly)
library(tidyverse)
library(tidyverse)
#Feature selection libraries
library(mlbench)
library(caret)
#For ROC curve
library(ROCR)
tune.out <- tune(svm, Classes ~ Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data = df_scaled, kernel ='linear', range = list(cost = c(0.001, 0.01, 0.1, 1, 10, 100)))
tune.out <- tune(svm, Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data = df_scaled, kernel ='linear', range = list(cost = c(0.001, 0.01, 0.1, 1, 10, 100)))
bestmod <- tune.out$best.model
bestmod
svm_tuned_model <- tune.out$best.model
svm_tuned_model
tune.out <- tune(svm, Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data = df_scaled, kernel ='linear', range = list(cost = c(0.001, 0.01, 0.1, 1, 10, 100)), gamma = c(0.001, 0.01, 0.1, 1, 10, 100))
svm_tuned_model <- tune.out$best.model
svm_tuned_model
tune.out <- tune(svm, Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data = df_scaled, kernel ='linear', range = list(cost = c(0.001, 0.01, 0.1, 1, 10, 100)))
svm_tuned_model <- tune.out$best.model
svm_tuned_model
tune.out <- tune(svm, Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data = df_scaled, kernel ='linear', range = list(cost = c(0.001, 0.01, 0.1, 1, 10)))
svm_tuned_model <- tune.out$best.model
svm_tuned_model
tune.out <- tune(svm, Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data = df_scaled, kernel ='linear', range = list(cost = c(0.001, 0.01, 0.1, 1, 10, 100)))
svm_tuned_model <- tune.out$best.model
svm_tuned_model
tune.out <- tune(svm, Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data = df_scaled, kernel ='linear', range = list(cost = c(0.001, 0.01, 0.1, 1, 10, 100)), gamma = c(0.001, 0.01, 0.1, 1, 10, 100))
svm_tuned_model <- tune.out$best.model
svm_tuned_model
set.seed(6)
tune.out <- tune(svm, Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data = df_scaled, kernel ='linear', range = list(cost = c(0.001, 0.01, 0.1, 1, 10, 100)), gamma = c(0.001, 0.01, 0.1, 1, 10, 100))
svm_tuned_model <- tune.out$best.model
svm_tuned_model
tune.out <- tune(svm, Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data = df_scaled, kernel ='linear', range = list(cost = c(0.001, 0.01, 0.1, 1, 10, 100)), gamma = c(0.001, 0.01, 0.1, 1, 10, 100))
tune.out <- tune(svm, Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data = df_scaled, kernel ='linear', range = list(cost = c(0.001, 0.01, 0.1, 1, 10, 100)), gamma = c(0.001, 0.01, 0.1, 1, 10, 100))
svm_tuned_model <- tune.out$best.model
svm_tuned_model
tune.out <- tune(svm, Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data = df_scaled, kernel ='linear', range = list(cost = c(0.001, 0.01, 0.1, 1, 10, 100)))
svm_tuned_model <- tune.out$best.model
svm_tuned_model
classifier = svm(formula = Purchased ~ .,
data = training_set,
type = 'C-classification',
kernel = 'linear')
classifier = svm(formula = Purchased ~ .,
data = train_set,
type = 'C-classification',
kernel = 'linear')
classifier = svm(formula = Classes ~ .,
data = train_set,
type = 'C-classification',
kernel = 'linear')
svm_model = svm(formula = Classes ~ .,
data = train_set,
type = 'C-classification',
kernel = 'linear')
svm_model = svm(formula = Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH,
data = train_set,
type = 'C-classification',
kernel = 'linear')
svm_model
svm_model$best.parameters$cost
svm_model$best.parameters$gamma
svm_model$best.parameters$cost
tune.out <- tune(svm, Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data = df_scaled, kernel ='linear', range = list(cost = c(0.001, 0.01, 0.1, 1, 10, 100), gamma = c(0.001, 0.01, 0.1, 1, 10, 100)))
tune.out <- tune(svm, Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data = df_scaled, kernel ='linear', range = list(cost = c(0.001, 0.01, 0.1, 1, 10, 100), gamma = c(0.001, 0.01, 0.1, 1, 10, 100)))
svm_tuned_model <- tune.out$best.model
svm_tuned_model
tune.out <- tune(svm, Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data = df_scaled, kernel ='linear', ranges  = list(cost = c(0.001, 0.01, 0.1, 1, 10, 100), gamma = c(0.001, 0.01, 0.1, 1, 10, 100)))
svm_tuned_model <- tune.out$best.model
svm_tuned_model
tune.out <- tune(svm, Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data = df_scaled, kernel ='linear'))
tune.out <- tune(svm, Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data = df_scaled, kernel ='linear')
svm_tuned_model <- tune.out$best.model
svm_tuned_model
tune.out <- tune(svm, Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data = df_scaled, kernel ='linear', range = list(gamma = c(0.001, 0.01, 0.1, 1, 10, 100)))
svm_tuned_model <- tune.out$best.model
svm_tuned_model
install.packages("GA")
control = trainControl(method = "repeatedcv", repeats=5, summaryFunction=twoClassSummary, classProbs=TRUE)
control = trainControl(method = "repeatedcv", repeats=5, summaryFunction=twoClassSummary, classProbs=TRUE)
svm.tune <- train(x = df_scaled, y=df_trained$Classes, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
svm.tune <- train(x = df_scaled, y=df_scaled$Classes, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
svm.tune <- train(x = train_set, y=df_scaled$Classes, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
df_scaled
svm.tune <- train(x = df_scaled, y=df_scaled$Classes, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
df_scaled
train
svm.tune
control
metric
ROC
tuneLength
df_scaled
Classes
df_scaled$Classes
control = trainControl(method = "repeatedcv", repeats=5, summaryFunction=twoClassSummary, classProbs=TRUE)
svm.tune <- train(x = df_scaled, y=df_scaled$Classes, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
svm.tune <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =df_scaled, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
unique(df_scaled$Classes)
df_scaled$Classes <- as.factor(df_scaled$Classes)
svm.tune <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =df_scaled, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
control = trainControl(method = "repeatedcv", repeats=5, classProbs=TRUE)
svm.tune <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =df_scaled, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
svm.tune <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =df_scaled, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
View(df_scaled)
df_scaled$Region <- as.factor(df_scaled$Region)
svm.tune <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =df_scaled, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
df_scaled$Classes <- as.character(df_scaled$Classes)
svm.tune <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =df_scaled, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
df_scaled$Classes <- as.factor(df_scaled$Classes)
svm.tune <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =df_scaled, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
df_scaled <- as.numeric(df_scaled)
df_scaled$Temperature <- as.numeric(df_scaled$Temperature)
svm.tune <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =df_scaled, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
?make.names
make.names(df_scaled)
df_scaled
make.names(df_scaled)
svm.tune <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =df_scaled, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
control = trainControl(method = "repeatedcv", repeats=5, summaryFunction=twoClassSummary, classProbs=TRUE)
svm.tune <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =df_scaled, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
svm_model <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =df_scaled, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
control = trainControl(method = "repeatedcv", repeats=5, summaryFunction=twoClassSummary)
svm_model <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =df_scaled, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
classProbs
control = trainControl(method = "repeatedcv", repeats=5, summaryFunction=twoClassSummary, classProbs=TRUE)
svm_model <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =df_scaled, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
svm_model <- train(Classes ~ Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =df_scaled, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
svm_model <- train(Classes ~ FFMC+DMC+DC+ISI+BUI+FWI+RH, data =df_scaled, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
svm_model <- train(Classes ~ DMC+DC+ISI+BUI+FWI+RH, data =df_scaled, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
svm_model <- train(Classes ~ DMC+DC+ISI+BUI+FWI, data =df_scaled, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
svm_model <- train(Classes ~ DMC+DC+ISI+BUI, data =df_scaled, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
svm_model <- train(Classes ~ DMC+DC+ISI, data =df_scaled, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
svm_model <- train(Classes ~ DMC+DC, data =df_scaled, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
svm_model <- train(Classes ~ DMC, data =df_scaled, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
svm_model <- train(Classes ~ ., data =df_scaled, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
Classes
df_scaled$Classes
df_scaled$
svm_model <- train(df_scaled$Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =df_scaled, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
svm_model <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =df_scaled, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
svm_model <- train(df_Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =df_scaled, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
svm_model <- train(df$Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =df_scaled, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
svm_model <- train(df$Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =df, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
svm_model <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =df, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
control = trainControl(method = "repeatedcv", repeats=5, classProbs=TRUE)
svm_model <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =df, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
svm_model <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =df_scaled, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
svm_model <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =train_set, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
df_scaled
svm_model <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =df_scaled, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
svm_model <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =df_scaled, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
control = trainControl(method = "repeatedcv", repeats=5, summaryFunction=twoClassSummary, classProbs=TRUE)
knn_cv <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH,
data = df_scaled,
method = "svmRadial",
trControl = training_control,
metric = "ROC",
tuneGrid = data.frame(k = seq(3, 85, by = 2)))
knn_cv <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH,
data = df_scaled,
method = "svmRadial",
trControl = control,
metric = "ROC",
tuneGrid = data.frame(k = seq(3, 85, by = 2)))
svm_model <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =df_scaled, method="svmRadial", tuneLength=5, metric="accuracy", trControl=control)
knn_cv <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH,
data = df_scaled,
method = "svmRadial",
trControl = control,
metric = "accuracy",
tuneGrid = data.frame(k = seq(3, 85, by = 2)))
svm_model <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH,
data = df_scaled,
method = "svmRadial",
trControl = control,
metric = "ROC",
tuneGrid = data.frame(k = seq(3, 85, by = 2)))
control = trainControl(method = "repeatedcv", repeats=5, summaryFunction=twoClassSummary, classProbs=TRUE)
svm_model <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH,
data = df_scaled,
method = "svmLinear",
trControl = control,
metric = "ROC",
tuneGrid = data.frame(k = seq(3, 85, by = 2)))
train_set$Classes <- mapvalues(df_scaled$Classes, from=c(0,1), to=c("not_fire","fire"))
df_scaled$Classes <- mapvalues(df_scaled$Classes, from=c(0,1), to=c("not_fire","fire"))
svm_model <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =df_scaled, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
svm_model <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =df_scaled, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
``
svm_model
control = trainControl(method = "repeatedcv", repeats=5, summaryFunction=twoClassSummary, classProbs=TRUE)
svm_model <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =df_scaled, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
svm_model <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =df_scaled, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
svm_model
svm_model <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =df_scaled, method="svmRadial", tuneLength=5, metric="Accuracy", trControl=control)
svm_model <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =df_scaled, method="svmRadial", tuneLength=5, metric="accuracy", trControl=control)
svm_model <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =df_scaled, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
svm_model
control = trainControl(method = "repeatedcv", repeats=5, summaryFunction=twoClassSummary, classProbs=TRUE)
svm_model <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =df_scaled, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
svm_model <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =df_scaled, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
svm_model
df_scaled$Classes <- mapvalues(train_set$Classes, from=c(0,1), to=c("not_fire","fire"))
train_set$Classes <- mapvalues(train_set$Classes, from=c(0,1), to=c("not_fire","fire"))
test_set$Classes <- mapvalues(test_set$Classes, from=c(0,1), to=c("not_fire","fire"))
control = trainControl(method = "repeatedcv", repeats=5, summaryFunction=twoClassSummary, classProbs=TRUE)
svm_model <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =train_set, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
svm_model <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =train_set, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
svm_model
confusionMatrix(preds_logistic, test_set$Classes,
mode = "everything",
positive="1")
confusionMatrix(svm_model, test_set$Classes,
mode = "everything",
positive="1")
confusionMatrix(svm_model, test_set$Classes,
positive="1")
confusionMatrix(svm_model, test_set$Classes)
unique(train_set$Classes)
confusionMatrix(svm_model, test_set$Classes,
mode = "everything",
positive="1")
confusionMatrix(predict(svm_model, test_set),Classes)
confusionMatrix(predict(svm_model, test_set),train_set$Classes)
confusionMatrix(predict(svm_model, test_set),test_set$Classes)
confusionMatrix(predict(svm_model, test_set),test_set$Classes, positive="fire")
svm_model <- svm(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data = train_set, sigma = 0.9930667, cost = 4)
svm_model
confusionMatrix(predict(svm_model, test_set),test_set$Classes, positive="fire")
confusionMatrix(predict(svm_model, train_set),train_set$Classes, positive="fire")
svm_model <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =train_set, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
svm_model
confusionMatrix(predict(svm_model, train_set),train_set$Classes, positive="fire")
confusionMatrix(predict(svm_model, test_set),test_set$Classes, positive="fire")
set.seed(6)
svm_model <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =train_set, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
svm_model
svm_model <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =train_set, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
svm_model
svm_model <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =train_set, method="svmRadial", tuneLength=5, metric="ROC", trControl=control)
svm_model
svm_model <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =train_set, method="svmRadial", metric="ROC", trControl=control)
svm_model
svm_model <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =train_set, method="svmRadial", metric="ROC", trControl=control)
svm_model <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =train_set, method="svmRadial", metric="ROC", trControl=control)
svm_model
svm_model <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =train_set, method="svmRadial", tuneLength=10, metric="ROC", trControl=control)
svm_model <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =train_set, method="svmRadial", tuneLength=10, metric="ROC", trControl=control)
svm_model
svm_model <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =train_set, method="svmRadial", tuneLength=10, metric="ROC", trControl=control)
svm_model
confusionMatrix(predict(svm_model, train_set),train_set$Classes, positive="fire")
confusionMatrix(predict(svm_model, test_set),test_set$Classes, positive="fire")
svm_model <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =train_set, method="svmRadial", tuneLength=10, metric="ROC", trControl=control)
confusionMatrixx(predict(svm_model, train_set),train_set$Classes, positive="fire")
confusionMatrixx(predict(svm_model, train_set),train_set$Classes, positive="fire")
confusionMatrix(predict(svm_model, train_set),train_set$Classes, positive="fire")
confusionMatrix(predict(svm_model, test_set),test_set$Classes, positive="fire")
preds_svm <- predict(svm_model, train_set)
preds_svm_train <- predict(svm_model, train_set)
confusionMatrix(preds_svm_train,train_set$Classes, positive="fire")
preds_svm_test <- predict(svm_model, test_set)
ROCPred <- prediction(preds_svm_test, test_set$Classes)
ROCPred <- prediction(as.numeric(preds_svm_test), test_set$Classes)
ROCPer <- performance(ROCPred, measure="tpr",x.measure="fpr")
auc <- performance(ROCPred, measure = "auc")
auc <- auc@y.values[[1]]
auc
preds_svm_test <- predict(svm_model, test_set)
confusionMatrix(preds_svm_test,test_set$Classes, positive="fire")
ROCPred <- prediction(as.numeric(preds_svm_test), test_set$Classes)
ROCPer <- performance(ROCPred, measure="tpr",x.measure="fpr")
auc <- auc@y.values[[1]]
ROCPred <- prediction(as.numeric(preds_svm_test), test_set$Classes)
ROCPer <- performance(ROCPred, measure="tpr",x.measure="fpr")
auc <- performance(ROCPred, measure = "auc")
auc <- auc@y.values[[1]]
auc
plot(ROCPer, colorize = TRUE)
preds_svm_test <- predict(svm_model, test_set, type="response")
preds_svm_test <- predict(svm_model, test_set)
confusionMatrix(preds_svm_test,test_set$Classes, positive="fire")
ROCPred <- prediction(as.numeric(preds_svm_test), test_set$Classes)
ROCPer <- performance(ROCPred, measure="tpr",x.measure="fpr")
auc <- performance(ROCPred, measure = "auc")
auc <- auc@y.values[[1]]
auc
auc <- auc@y.values[[0]]
auc <- auc@y.values[[2]]
1
1
auc
ROCPred <- prediction(as.factor(preds_svm_test), test_set$Classes)
ROCPred <- prediction(as.numeric(preds_svm_train), train_set$Classes)
ROCPer <- performance(ROCPred, measure="tpr",x.measure="fpr")
auc <- performance(ROCPred, measure = "auc")
auc <- auc@y.values[[1]]
auc
plot(ROCPer, colorize = TRUE)
ROCPred <- prediction(as.numeric(preds_svm_train$class), train_set$Classes)
preds_svm_train <- predict(svm_model, train_set, type="response")
ROCPred <- prediction(preds_svm_test$class, train_set$Classes)
ROCPred <- prediction(preds_svm_test, train_set$Classes)
ROCPred <- prediction(as.character(preds_svm_test), train_set$Classes)
ROCPred <- prediction(list(preds_svm_test), train_set$Classes)
preds_svm_test
train_set
train_set$Classes
train_set$Classes <- mapvalues(train_set$Classes, from=c("not_fire","fire"), to=c(0,1))
train_set$Classes <- mapvalues(train_set$Classes, from=c("not_fire","fire"), to=c(0,1))
test_set$Classes <- mapvalues(test_set$Classes, from=c("not_fire","fire"), to=c(0,1))
ROCPred <- prediction(preds_svm_test, train_set$Classes)
ROCPred <- prediction(as.numeric(preds_svm_test), train_set$Classes)
preds_svm_train <- predict(svm_model, train_set)
confusionMatrix(preds_svm_train,train_set$Classes, positive="fire")
confusionMatrix(preds_svm_train,train_set$Classes, positive=1)
preds_svm_train <- predict(svm_model, train_set)
confusionMatrix(preds_svm_train,train_set$Classes, positive=1)
confusionMatrix(preds_svm_train,train_set$Classes, positive="1")
confusionMatrix(preds_svm_train,train_set$Classes)
preds_svm_train <- predict(svm_model, train_set)
train_set$Classes <- mapvalues(train_set$Classes, from=c("not_fire","fire"), to=c(0,1))
train_set$Classes
preds_svm_train <- predict(svm_model, train_set)
confusionMatrix(preds_svm_train,train_set$Classes)
preds_svm_test <- predict(svm_model, test_set)
confusionMatrix(preds_svm_test,test_set$Classes)
ROCPred <- prediction(as.numeric(preds_svm_test), train_set$Classes)
train_set$Classes <- mapvalues(train_set$Classes, from=c(0,1), to=c("not_fire","fire"))
test_set$Classes <- mapvalues(test_set$Classes, from=c(0,1), to=c("not_fire","fire"))
control = trainControl(method = "repeatedcv", repeats=5, summaryFunction=twoClassSummary, classProbs=TRUE)
svm_model <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =train_set, method="svmRadial", tuneLength=10, metric="ROC", trControl=control)
svm_model <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =train_set, method="svmRadial", tuneLength=10, metric="ROC", trControl=control)
svm_model
svm_model <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =train_set, method="svmRadial", tuneLength=10, metric="ROC", trControl=control)
svm_model
preds_svm_train <- predict(svm_model, train_set)
confusionMatrix(preds_svm_train,train_set$Classes, positive="fire")
preds_svm_test <- predict(svm_model, test_set)
confusionMatrix(preds_svm_test,test_set$Classes, positive="fire")
ROCPred <- prediction(as.numeric(preds_svm_t$class), train_set$Classes)
ROCPred <- prediction(preds_svm_t$class, train_set$Classes)
ROCPred <- prediction(preds_svm_t, train_set$Classes)
ROCPred <- prediction(preds_svm_train, train_set$Classes)
ROCPred <- prediction(preds_svm_train, train_set$Classes)
ROCPred <- prediction(preds_svm_train, train_set)
$Classes
ROCPred <- prediction(preds_svm_train, train_set$Classes)
ROCPred <- prediction(preds_svm_test, test_set$Classes)
preds_svm_test
preds_svm_test <- list(preds_svm_test)
ROCPred <- prediction(preds_svm_test, test_set$Classes)
preds_svm_test
ROCPred <- prediction(preds_svm_test, test_set$Classes)
preds_svm_train <- predict(svm_model, train_set)
confusionMatrix(preds_svm_train,train_set$Classes, positive="fire")
preds_svm_test <- predict(svm_model, test_set)
confusionMatrix(preds_svm_test,test_set$Classes, positive="fire")
ROCPred <- prediction(preds_svm_test, test_set$Classes)
preds_svm_test <- as.numeric(preds_svm_test)
ROCPred <- prediction(preds_svm_test, test_set$Classes)
ROCPer <- performance(ROCPred, measure="tpr",x.measure="fpr")
auc <- performance(ROCPred, measure = "auc")
auc <- auc@y.values[[1]]
auc
preds_svm_test
test_set$Classes
preds_svm_test <- as.numeric(preds_svm_test)
ROCPred <- prediction(preds_svm_test, as.numeric(test_set$Classes))
ROCPer <- performance(ROCPred, measure="tpr",x.measure="fpr")
auc <- performance(ROCPred, measure = "auc")
auc <- auc@y.values[[1]]
auc
plot(ROCPer, colorize = TRUE)
ROCPred <- prediction(as.numeric(preds_svm_test), as.numeric(test_set$Classes))
ROCPer <- performance(ROCPred, measure="tpr",x.measure="fpr")
auc <- performance(ROCPred, measure = "auc")
auc <- auc@y.values[[1]]
auc
svm_model_radial <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =train_set, method="svmRadial", tuneLength=10, metric="ROC", trControl=control)
svm_model_linear <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =train_set, method="svmLinear", tuneLength=10, metric="ROC", trControl=control)
svm_model_radial
svm_model_linear
svm_model_linear <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =train_set, method="svmLinear", tuneLength=10, metric="ROC", trControl=control)
svm_model_linear
preds_svm_train <- predict(svm_model_linear, train_set)
confusionMatrix(preds_svm_train,train_set$Classes, positive="fire")
preds_svm_test <- predict(svm_model_linear, test_set)
confusionMatrix(preds_svm_test,test_set$Classes, positive="fire")
confusionMatrix(preds_svm_train,train_set$Classes, positive="fire")
confusionMatrix(preds_svm_test,test_set$Classes, positive="fire")
svm_model_linear <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =train_set, method="svmLinear", tuneLength=10, metric="Accuracy", trControl=control)
ROC
svm_model_radial <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =train_set, method="svmRadial", tuneLength=10, metric="ROC", trControl=control)
svm_model_linear <- train(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data =train_set, method="svmLinear", tuneLength=10, metric="ROC", trControl=control)
svm_model_radial
svm_model_linear
preds_svm_train <- predict(svm_model_linear, train_set)
confusionMatrix(preds_svm_train,train_set$Classes, positive="fire")
preds_svm_test <- predict(svm_model_linear, test_set)
confusionMatrix(preds_svm_test,test_set$Classes, positive="fire")
preds_svm_test <- predict(svm_model_radial, test_set)
confusionMatrix(preds_svm_test,test_set$Classes, positive="fire")
preds_svm_test <- predict(svm_model_linear, test_set)
confusionMatrix(preds_svm_test,test_set$Classes, positive="fire")
radial
preds_svm_train <- predict(svm_model_radial, train_set)
confusionMatrix(preds_svm_train,train_set$Classes, positive="fire")
preds_svm_train <- predict(svm_model_linear, train_set)
confusionMatrix(preds_svm_train,train_set$Classes, positive="fire")
preds_svm_test <- predict(svm_model_linear, test_set)
confusionMatrix(preds_svm_test,test_set$Classes, positive="fire")
preds_svm_test <- predict(svm_model_radial, test_set)
confusionMatrix(preds_svm_test,test_set$Classes, positive="fire")
preds_svm_train_linear <- predict(svm_model_linear, train_set)
preds_svm_train_radial <- predict(svm_model_linear, train_set)
confusionMatrix(preds_svm_train_linear,train_set$Classes, positive="fire")
confusionMatrix(preds_svm_train_radial,train_set$Classes, positive="fire")
confusionMatrix(preds_svm_train_radial,train_set$Classes, positive="fire")
preds_svm_train_radial <- predict(svm_model_radial, train_set)
confusionMatrix(preds_svm_train_linear,train_set$Classes, positive="fire")
confusionMatrix(preds_svm_train_radial,train_set$Classes, positive="fire")
preds_svm_test_linear <- predict(svm_model_linear, test_set)
preds_svm_test_radial <- predict(svm_model_radial, test_set)
confusionMatrix(preds_svm_test_linear,test_set$Classes, positive="fire")
confusionMatrix(preds_svm_test_radial,test_set$Classes, positive="fire")
confusionMatrix(preds_svm_train_linear,train_set$Classes, positive="fire")
plot(ROCPer, colorize = TRUE)
