predict
table(test_set$Classes,predict)
misclassifications <- mean(predict != test_set$Classes)
print(paste('Accuracy =',1-misclassifications))
predict <- ifelse(predict >0.5,1,0)
predict
table(test_set$Classes,predict)
misclassifications <- mean(predict != test_set$Classes)
print(paste('Accuracy =',1-misclassifications))
ROCPred <- prediction(predict,test_set$Classes)
ROCPer <- performance(ROCPred, measure="tpr",x.measure="fpr")
auc <- performance(ROCPred, measure = "auc")
auc <- auc@y.values[[1]]
auc
plot(ROCPer, colorize = TRUE)
set.seed(6)
split <- sample.split(df_scaled, SplitRatio=0.8)
train_set <- subset(df_scaled, split == "TRUE")
test_set <- subset(df_scaled, split=="FALSE")
dim(train_set)
dim(test_set)
lda_model = lda (Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data=train_set)
lda_model
preds = predict(lda_model,test_set, type="response")
confusionMatrix(preds$class, test_set$Classes,
mode = "everything",
positive="1")
confusionMatrix(preds$class, test_set$Classes,
mode = "everything",
positive="1")
preds <- ifelse(predict >0.5,1,0)
preds
confusionMatrix(preds$class, test_set$Classes,
mode = "everything",
positive="1")
preds <- as.factor(preds)
table(test_set$Classes,predict)
misclassifications <- mean(predict != test_set$Classes)
misclassifications <- mean(predict != test_set$Classes)
print(paste('Accuracy =',1-misclassifications))
confusionMatrix(preds$class, test_set$Classes,
mode = "everything",
positive="1")
confusionMatrix(class, test_set$Classes,
mode = "everything",
positive="1")
confusionMatrix(preds$class, test_set$Classes,
confusionMatrix(preds$class, test_set$Classes,
mode = "everything",
positive="1")
predict <- predict(logistic_model, test_set, type="response")
predict <- predict(logistic_model, test_set, type="response")
confusionMatrix(preds$class, test_set$Classes,
mode = "everything",
positive="1")
predict
confusionMatrix(preds$class, test_set$Classes,
mode = "everything",
positive="1")
confusionMatrix(preds, test_set$Classes,
mode = "everything",
positive="1")
predict
preds <- predict(logistic_model, test_set, type="response")
preds
preds <- ifelse(predict >0.5,1,0)
confusionMatrix(preds$class, test_set$Classes,
mode = "everything",
positive="1")
confusionMatrix(preds, test_set$Classes,
mode = "everything",
positive="1")
confusionMatrix(preds, test_set$Classes,
mode = "everything",
positive="1")
preds <- predict(logistic_model, test_set, type="response")
confusionMatrix(preds, test_set$Classes,
mode = "everything",
positive="1")
confusionMatrix(preds, test_set$Classes,
mode = "everything",
positive="1")
preds <- predict(logistic_model, test_set, type="response")
confusionMatrix(preds, test_set$Classes,
mode = "everything",
positive="1")
preds <- predict(logistic_model, test_set, type="response")
preds <- ifelse(predict >0.5,1,0)
preds <- as.factor(preds)
confusionMatrix(preds$class, test_set$Classes,
mode = "everything",
positive="1")
confusionMatrix(preds, test_set$Classes,
mode = "everything",
positive="1")
preds_logistic <- predict(logistic_model, test_set, type="response")
preds_logistic <- ifelse(predict >0.5,1,0)
preds_logistic <- as.factor(preds_logistic)
confusionMatrix(preds_logistic, test_set$Classes,
mode = "everything",
positive="1")
pred <- prediction(preds_logistic$posterior[,2], test_set$Classes)
pred <- prediction(preds_logistic.posterior[,2], test_set$Classes)
pred <- prediction(preds_logistic, test_set$Classes)
pred <- prediction(preds_logistic$posterior[,2], test_set$Classes)
pred <- prediction(preds_logistic[[posterior[,2]]], test_set$Classes)
pred <- prediction(preds_logistic[posterior[,2]], test_set$Classes)
ROCPred <- prediction(preds_logistic,test_set$Classes)
preds_logistic <- predict(logistic_model, test_set, type="response")
preds_logistic <- ifelse(predict >0.5,1,0)
confusionMatrix(preds_logistic, test_set$Classes,
mode = "everything",
positive="1")
preds_logistic <- as.factor(preds_logistic)
confusionMatrix(preds_logistic, test_set$Classes,
mode = "everything",
positive="1")
preds_logistic
ROCPred <- prediction(preds_logistic,test_set$Classes)
ROCPred <- prediction(as.numeric(preds_logistic), test_set$Classes)
ROCPer <- performance(ROCPred, measure="tpr",x.measure="fpr")
auc <- performance(ROCPred, measure = "auc")
auc <- auc@y.values[[1]]
auc
plot(ROCPer, colorize = TRUE)
confusionMatrix(as.numeric(preds_logistic)$class, test_set$Classes,
mode = "everything",
positive="1")
ROCPred <- prediction(as.numeric(preds_logistic), test_set$Classes)
ROCPer <- performance(ROCPred, measure="tpr",x.measure="fpr")
auc <- performance(ROCPred, measure = "auc")
auc <- auc@y.values[[1]]
auc
plot(ROCPer, colorize = TRUE)
auc
plot(ROCPer, colorize = TRUE)
auc
preds_logistic <- predict(logistic_model, test_set, type="response")
preds_logistic <- ifelse(predict >0.5,1,0)
preds_logistic <- as.factor(preds_logistic)
confusionMatrix(preds_logistic, test_set$Classes,
mode = "everything",
positive="1")
preds = predict(lda_model,test_set, type="response")
confusionMatrix(preds$class, test_set$Classes,
mode = "everything",
positive="1")
preds = predict(lda_model,test_set, type="response")
confusionMatrix(preds$class, test_set$Classes,
mode = "everything",
positive="1")
set.seed(6)
split <- sample.split(df_scaled, SplitRatio=0.8)
train_set <- subset(df_scaled, split == "TRUE")
test_set <- subset(df_scaled, split=="FALSE")
dim(train_set)
dim(test_set)
lda_model = lda (Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data=train_set)
lda_model
preds = predict(lda_model,test_set, type="response")
confusionMatrix(preds$class, test_set$Classes,
mode = "everything",
positive="1")
set.seed(6)
split <- sample.split(df_scaled, SplitRatio=0.8)
train_set <- subset(df_scaled, split == "TRUE")
test_set <- subset(df_scaled, split=="FALSE")
dim(train_set)
dim(test_set)
lda_model = lda (Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data=train_set)
lda_model
set.seed(6)
split <- sample.split(df_scaled, SplitRatio=0.8)
train_set <- subset(df_scaled, split == "TRUE")
test_set <- subset(df_scaled, split=="FALSE")
dim(train_set)
dim(test_set)
lda_model = lda (Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data=train_set)
lda_model
plot(ROCPer, colorize = TRUE)
set.seed(6)
split <- sample.split(df_scaled, SplitRatio=0.8)
train_set <- subset(df_scaled, split == "TRUE")
test_set <- subset(df_scaled, split=="FALSE")
dim(train_set)
dim(test_set)
qda_model = qda(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data=train_set)
qda_model
```{r}
set.seed(6)
split <- sample.split(df_scaled, SplitRatio=0.8)
train_set <- subset(df_scaled, split == "TRUE")
test_set <- subset(df_scaled, split=="FALSE")
head(train_set)
dim(train_set)
dim(test_set)
set.seed(6)
split <- sample.split(df_scaled, SplitRatio=0.8)
train_set <- subset(df_scaled, split == "TRUE")
test_set <- subset(df_scaled, split=="FALSE")
dim(train_set)
dim(test_set)
logistic_model <- glm(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data=train_set, family="binomial")
summary(logistic_model)
preds_logistic <- predict(logistic_model, train_set, type="response")
preds_logistic <- ifelse(predict >0.5,1,0)
preds_logistic <- as.factor(preds_logistic)
confusionMatrix(preds_logistic, train_set$Classes,
mode = "everything",
positive="1")
confusionMatrix(preds_logistic, train_set$Classes,
mode = "everything",
positive="1")
preds_logistic <- ifelse(predict >0.5,1,0)
preds_logistic <- as.factor(preds_logistic)
preds_logistic <- predict(logistic_model, train_set, type="response")
preds_logistic <- predict(logistic_model, train_set, type="response")
```{r}
preds_logistic <- ifelse(predict >0.5,1,0)
preds_logistic <- as.factor(preds_logistic)
confusionMatrix(preds_logistic, train_set$Classes,
mode = "everything",
positive="1")
preds_logistic <- predict(logistic_model, train_set, type="response")
preds_logistic <- ifelse(preds >0.5,1,0)
preds_logistic <- predict(logistic_model, train_set, type="response")
preds_logistic <- ifelse(preds_logistic >0.5,1,0)
preds_logistic <- as.factor(preds_logistic)
confusionMatrix(preds_logistic, train_set$Classes,
mode = "everything",
positive="1")
preds_logistic <- predict(logistic_model, test_set, type="response")
preds_logistic <- ifelse(preds_logistic >0.5,1,0)
preds_logistic <- as.factor(preds_logistic)
confusionMatrix(preds_logistic, test_set$Classes,
mode = "everything",
positive="1")
auc
lda_model = lda (Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data=train_set)
lda_model
summarise(lda_model)
summary(lda_model)
summarize(lda_model)
lda_model = lda (Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data=train_set)
lda_model
preds = predict(lda_model,test_set, type="response")
confusionMatrix(preds$class, test_set$Classes,
mode = "everything",
positive="1")
lda_model = lda (Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data=train_set)
lda_model
logistic_model <- glm(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data=train_set, family="binomial")
summary(logistic_model)
logistic_model
preds_logistic <- predict(logistic_model, train_set, type="response")
preds_logistic <- ifelse(preds_logistic >0.5,1,0)
preds_logistic <- as.factor(preds_logistic)
confusionMatrix(preds_logistic, train_set$Classes,
mode = "everything",
positive="1")
preds_logistic <- predict(logistic_model, test_set, type="response")
preds_logistic <- ifelse(pred >0.5,1,0)
preds_logistic <- as.factor(preds_logistic)
preds_logistic <- ifelse(pred >0.5,1,0)
preds_logistic <- predict(logistic_model, test_set, type="response")
preds_logistic <- ifelse(preds_logistic >0.5,1,0)
preds_logistic <- as.factor(preds_logistic)
confusionMatrix(preds_logistic, test_set$Classes,
mode = "everything",
positive="1")
lda_model = lda(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data=train_set)
lda_model
summary(lda_model)
lda_model
lda_model = lda(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data=train_set, family="binomial")
lda_model
summary(lda_model)
lda_model
logistic_model
logistic_model <- glm(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data=train_set, family="binomial")
logistic_model <- glm(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data=train_set, family="binomial")
logistic_model
lda_model = lda(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data=train_set, family="binomial")
lda_model
preds_lda = predict(lda_model,test_set, type="response")
confusionMatrix(preds_lda$class, test_set$Classes,
mode = "everything",
positive="1")
preds_lda <- prediction(preds_lda$posterior[,2], test_set$Classes)
perf <- performance(pred,"tpr","fpr")
perf <- performance(preds_lda,"tpr","fpr")
plot(perf,colorize=TRUE)
qda_model = qda(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data=train_set)
qda_model
preds = predict(lda_model,test_set, type="response")
confusionMatrix(preds$class, test_set$Classes,
mode = "everything",
positive="1")
preds = predict(qda_model,test_set, type="response")
confusionMatrix(preds$class, test_set$Classes,
mode = "everything",
positive="1")
library(MASS)
library(dplyr)
library(vtable)
library(plyr)
library(ggplot2)
library(ggcorrplot)
library(plotly)
library(tidyverse)
#Feature selection libraries
library(mlbench)
library(caret)
#For Logistic regression
library(caTools)
#For ROC curve
library(ROCR)
df_b <- read.csv("./Algerian_forest_fires_dataset_Bejaia.csv")
df_s <- read.csv("./Algerian_forest_fires_dataset_Sidi_Bel_Abbes.csv")
colSums(is.na(df_b))
colSums(is.na(df_s))
df_b[["Region"]] = 0
df_s[["Region"]] = 1
df_s$DC <- as.double(df_s$DC)
df_s$FWI <- as.double(df_s$FWI)
df = full_join(df_s, df_b)
dim(df)
str(df)
summary(df)
unique(df$year)
unique(df$month)
colSums(is.na(df))
df = df %>% drop_na(DC)
dim(df)
unique(df$Classes)
unique(df$Region)
df$Classes <- trimws(df$Classes, which = c("both"))
unique(df$Classes)
df = df %>% drop_na(Classes)
df$Classes <- mapvalues(df$Classes, from=c("not fire","fire"), to=c(0,1))
unique(df$Classes)
df$Classes <- as.numeric(df$Classes)
st(df)
df <- df[-c(3)]
df_scaled = df
df_scaled[-c(1,2,13,14)] <- scale(df[-c(1,2,13,14)])
st(df_scaled)
aggregate(df$Classes ~ df$Region, FUN = sum)
aggregate(df$Temperature ~ df$Region, FUN = mean)
df %>%
group_by(Region) %>%
summarise(Region = Region, Number_of_fires = sum(Classes), Temperature = mean(Temperature)) %>%
ggplot(aes(x=Region, y=Number_of_fires, fill = Temperature))+
geom_col(position='dodge')
corr_mat <- round(cor(df_scaled),2)
p_mat <- cor_pmat(df_scaled)
corr_mat <- ggcorrplot(
corr_mat,
hc.order = FALSE,
type = "upper",
outline.col = "white",
)
ggplotly(corr_mat)
# prepare training scheme
df_scaled$Classes = as.factor(df_scaled$Classes)
control <- trainControl(method="repeatedcv", number=10, repeats=3)
# train the model
modelLDA <- train(Classes~., data=df_scaled, method="stepLDA", trControl=control)
importanceLDA <- varImp(modelLDA, scale=FALSE)
plot(importanceLDA)
set.seed(6)
split <- sample.split(df_scaled, SplitRatio=0.8)
train_set <- subset(df_scaled, split == "TRUE")
test_set <- subset(df_scaled, split=="FALSE")
dim(train_set)
dim(test_set)
logistic_model <- glm(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data=train_set, family="binomial")
logistic_model
preds_logistic <- predict(logistic_model, train_set, type="response")
preds_logistic <- ifelse(preds_logistic >0.5,1,0)
preds_logistic <- as.factor(preds_logistic)
confusionMatrix(preds_logistic, train_set$Classes,
mode = "everything",
positive="1")
preds_logistic <- predict(logistic_model, test_set, type="response")
preds_logistic <- ifelse(preds_logistic >0.5,1,0)
preds_logistic <- as.factor(preds_logistic)
confusionMatrix(preds_logistic, test_set$Classes,
mode = "everything",
positive="1")
ROCPred <- prediction(as.numeric(preds_logistic), test_set$Classes)
ROCPer <- performance(ROCPred, measure="tpr",x.measure="fpr")
auc <- performance(ROCPred, measure = "auc")
auc <- auc@y.values[[1]]
auc
plot(ROCPer, colorize = TRUE)
lda_model = lda(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data=train_set, family="binomial")
lda_model
preds_lda = predict(lda_model,test_set, type="response")
confusionMatrix(preds_lda$class, test_set$Classes,
mode = "everything",
positive="1")
preds_lda <- prediction(preds_lda$posterior[,2], test_set$Classes)
perf <- performance(preds_lda,"tpr","fpr")
plot(perf,colorize=TRUE)
qda_model = qda(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data=train_set)
qda_model
preds = predict(qda_model,test_set, type="response")
confusionMatrix(preds$class, test_set$Classes,
mode = "everything",
positive="1")
pred <- prediction(preds$posterior[,2], test_set$Classes)
perf <- performance(pred,"tpr","fpr")
plot(perf,colorize=TRUE)
ldahist(model_lda$x[,1], g= model_lda$class)
ldahist(lda_model$x[,1], g= lda_model$class)
ldahist(preds_lda$x[,1], g= preds_lda$class)
preds_lda = as.numeric(preds_lda)
preds_lda <- prediction(preds_lda$posterior[,2], test_set$Classes)
preds_lda = predict(lda_model,test_set, type="response")
confusionMatrix(preds_lda$class, test_set$Classes,
mode = "everything",
positive="1")
preds_lda <- prediction(preds_lda$posterior[,2], test_set$Classes)
perf <- performance(preds_lda,"tpr","fpr")
plot(perf,colorize=TRUE)
preds_lda = as.numeric(preds_lda)
ldahist(preds_lda$x[,1], g= preds_lda$class)
preds_lda <- prediction(preds_lda$posterior[,2], test_set$Classes)
preds_lda <- prediction(preds_lda$posterior[,2], test_set$Classes)
preds_lda = predict(lda_model,test_set, type="response")
confusionMatrix(preds_lda$class, test_set$Classes,
mode = "everything",
positive="1")
preds_lda <- prediction(preds_lda$posterior[,2], test_set$Classes)
perf <- performance(preds_lda,"tpr","fpr")
plot(perf,colorize=TRUE)
ldahist(preds_lda$x[,1], g= preds_lda$class)
plot(qda_model)
qda_model = qda(Classes ~ Temperature+Rain+FFMC+DMC+DC+ISI+BUI+FWI+RH, data=train_set)
qda_model
preds = predict(qda_model,train_set, type="response")
confusionMatrix(preds$class, train_set$Classes,
mode = "everything",
positive="1")
ROCPred <- prediction(as.numeric(preds_qda), test_set$Classes)
preds_qda = predict(qda_model,train_set, type="response")
confusionMatrix(preds$class, train_set$Classes,
mode = "everything",
positive="1")
preds_qda = predict(qda_model,test_set, type="response")
confusionMatrix(preds$class, test_set$Classes,
mode = "everything",
positive="1")
confusionMatrix(preds_qda$class, test_set$Classes,
mode = "everything",
positive="1")
ROCPred <- prediction(as.numeric(preds_qda), test_set$Classes)
ROCPred <- prediction(preds_qda, test_set$Classes)
preds_qda = predict(qda_model,test_set, type="response")
confusionMatrix(preds_qda$class, test_set$Classes,
mode = "everything",
positive="1")
ROCPred <- prediction(preds_qda, test_set$Classes)
ROCPred <- prediction(preds_qda, test_set$Classes)
preds_qda = predict(qda_model,test_set$Classes, type="response")
preds_qda = predict(qda_model,test_set, type="response")
confusionMatrix(preds_qda$class, test_set$Classes,
mode = "everything",
positive="1")
ROCPred <- prediction(preds_qda$class, test_set$Classes)
ROCPred <- prediction(as.numeric(preds_qda$class), test_set$Classes)
ROCPred <- prediction(as.numeric(preds_qda$class), test_set$Classes)
ROCPer <- performance(ROCPred, measure="tpr",x.measure="fpr")
auc <- performance(ROCPred, measure = "auc")
auc <- auc@y.values[[1]]
auc
plot(ROCPer, colorize = TRUE)
auc
ROCPred <- prediction(as.numeric(preds_lda$class), test_set$Classes)
ROCPred <- prediction(preds_lda$class), test_set$Classes)
ROCPred <- prediction(preds_lda$class, test_set$Classes)
ROCPred <- prediction(preds_lda, test_set$Classes)
preds_lda = predict(lda_model,test_set, type="response")
confusionMatrix(preds_lda$class, test_set$Classes,
mode = "everything",
positive="1")
ROCPred <- prediction(preds_lda$class), test_set$Classes)
ROCPred <- prediction(preds_lda$class, test_set$Classes)
ROCPred <- prediction(as.numeric(preds_lda$class), test_set$Classes)
ROCPer <- performance(ROCPred, measure="tpr",x.measure="fpr")
auc <- performance(ROCPred, measure = "auc")
auc <- auc@y.values[[1]]
auc
plot(ROCPer, colorize = TRUE)
auc
preds_lda = predict(lda_model,train_set, type="response")
confusionMatrix(preds_lda$class, train_set$Classes,
mode = "everything",
positive="1")
preds_lda = predict(lda_model,test_set, type="response")
confusionMatrix(preds_lda$class, test_set$Classes,
mode = "everything",
positive="1")
preds_lda = predict(lda_model,train_set, type="response")
confusionMatrix(preds_lda$class, train_set$Classes,
mode = "everything",
positive="1")
preds_lda = predict(lda_model,test_set, type="response")
confusionMatrix(preds_lda$class, test_set$Classes,
mode = "everything",
positive="1")
